snippet xhr
  var xhr= new XMLHttpRequest();
  xhr.open('${1:GET}', '${2:/}' true);
  xhr.onload = function (e) {
    ${3};
  };
  xhr.send();

snippet ce
  document.createElement('${1}

snippet gid
  document.getElementById('${1}

snippet qry
  document.querySelector('${1}

snippet qrya
  document.querySelectorAll('${1}
  
snippet body
  document.body

snippet ac
  appendChild('${1}

snippet var
  var ${1} = ${2}

snippet log
  console.log(${1}

snippet req
  require('${1}

snippet req2
  var ${1} = require('${2}

snippet Promise
  new Promise(function (resolve, reject) {
    ${1:// do something}
  });

snippet then
  then(function (${1}) {
    ${2:// do something}
  })

snippet task
abbr    gt
  gulp.task('${1}', function () {
    ${2:// do something}
  });

snippet watch
abbr    gw
  gulp.watch([${1}], ${2});

snippet src
abbr    gs
  gulp.src(${1})

snippet dest
abbr    gd
  gulp.dest('${1}')

snippet gulp-default
abbr    gdef
  gulp.task('default', [${1}]);

snippet describe
abbr des
  describe('${1}', () => {
    ${2:// do something}
  });

snippet describe2
abbr des2
  describe('${1}', function () {
    ${2:// do something}
  });

snippet it
  it('${1}', (${2:done}) => {
    ${3:assert(1 === 1);}
  });

snippet it2
  it('${1}', function (${2:done})  {
    ${3:assert(1 === 1);}
  });

snippet before
abbr bf
  before(() => {
    this.${1} 
  });

snippet before2
abbr bf2
  before(function () {
    this.${1} 
  });

snippet beforeEach
abbr bfe
  beforeEach(() => {
    this.${1} 
  });

snippet beforeEach2
abbr bfe2
  beforeEach(function () {
    this.${1} 
  });

snippet after
abbr af
  after(() => {
    this.${1} 
  });

snippet after2
abbr af2
  after(function () {
    this.${1} 
  });

snippet afterEach
abbr afe
  afterEach(() => {
    this.${1}
  });

snippet afterEach2
abbr afe2
  afterEach(function () {
    this.${1}
  });


snippet afun
  (${1}) => {
    ${2:// do something}
  }

snippet import
  import ${1} from '${2}

snippet exd
  export default ${1}
