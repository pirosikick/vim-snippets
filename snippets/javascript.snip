snippet xhr
  let xhr= new XMLHttpRequest();
  xhr.open('${1:GET}', '${2:/}' true);
  xhr.onload = function (e) {
    ${3};
  };
  xhr.send();

snippet ce
  document.createElement('${1}

snippet gid
  document.getElementById('${1}

snippet qry
  document.querySelector('${1}

snippet qrya
  document.querySelectorAll('${1}

snippet body
  document.body

snippet ac
  appendChild('${1}

snippet const
  const ${1} = ${2}

snippet let
  let ${1} = ${2}

snippet log
  console.log(${1}

snippet require1
abbr rq1
  const ${1} = require('${2}

snippet require2
abbr rq2
  require('${1}

snippet require-path
abbr rqp
  const path = require('path');${1}

snippet then
  then(function (${1}) {
    ${2:// do something}
  })

snippet task
  gulp.task('${1}', ${2:[], }() => {
    ${4}
  });

snippet watch
  gulp.watch([${1}], ['${2}

snippet src
  gulp.src('${1}

snippet dest
  gulp.dest('${1}

snippet gulp-default
  gulp.task('default', [${1}]);

snippet describe
  describe('${1}', function () {
    ${2:// do something}
  });

snippet it
  it('${1}', function (${2:done})  {
    ${3:assert(1 === 1);}
  });

snippet before
  before(function () {
    this.${1}
  });

snippet beforeEach
  beforeEach(function () {
    this.${1}
  });

snippet after
  after(function () {
    this.${1}
  });

snippet afterEach
  afterEach(function () {
    this.${1}
  });

snippet context
  context('${1}', function () {
    ${2}
  });

snippet afun
  (${1}) => {
    ${2:// do something}
  }

snippet import
abbr imp
  import ${1} from '${2}

snippet import-all
abbr impa
  import * as ${1} from '${2}

snippet import-part
abbr impp
  import { ${1} } from '${2}

snippet import-part
abbr impp
  import { ${1} } from '${2}

snippet import-ava
abbr impava
  import test from 'ava';${1}

snippet import-react
  import React${1} from 'react';${2}

snippet exd
  export default ${1}

delete path

snippet eslint-disable
abbr lintd
  /* eslint-disable ${1}

snippet eslint-disable-line
abbr lintdl
  // eslint-disable-line${1}

snippet ava-test
abbr avt
  test('${1}', t => {
    ${2}
  });

snippet react-component
abbr reactc
  class ${1} extends Component {
    ${2}
  }

snippet react-prop-types
abbr propt
  ${1}.propTypes = {
    ${2}
  };

snippet react-prop-types-field
abbr propf
  ${1}: PropTypes.${2}
